<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.club.management.mapper.ActivityMapper">

    <select id="selectActivityPage" resultType="com.club.management.entity.Activity">
        SELECT a.*, 
               GROUP_CONCAT(DISTINCT d.name SEPARATOR ', ') as deptNames
        FROM activity a
        LEFT JOIN activity_dept ad ON a.id = ad.activity_id
        LEFT JOIN dept d ON ad.dept_id = d.id
        <where>
            <if test="name != null and name != ''">
                AND a.name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="type != null and type != ''">
                AND a.type = #{type}
            </if>
            <if test="deptId != null">
                AND EXISTS (
                    SELECT 1 FROM activity_dept ad2 
                    WHERE ad2.activity_id = a.id AND ad2.dept_id = #{deptId}
                )
            </if>
            <if test="status != null">
                AND a.status = #{status}
            </if>
            <if test="createBy != null">
                AND a.create_by = #{createBy}
            </if>
            <if test="startTime != null">
                AND a.start_time &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                AND a.end_time &lt;= #{endTime}
            </if>
        </where>
        GROUP BY a.id
        <choose>
            <when test="sortField != null and sortField != ''">
                ORDER BY
                <choose>
                    <when test="sortField == 'start_time'"> a.start_time </when>
                    <when test="sortField == 'create_time'"> a.create_time </when>
                    <otherwise> a.create_time </otherwise>
                </choose>
                <choose>
                    <when test="sortOrder == 'asc'"> ASC </when>
                    <otherwise> DESC </otherwise>
                </choose>
            </when>
            <otherwise>
                ORDER BY a.create_time DESC
            </otherwise>
        </choose>
    </select>

    <!-- 获取活动的审批人信息 -->
    <select id="selectActivityApprovers" resultType="java.util.Map">
        SELECT 
            aa.id,
            aa.activity_id as activityId,
            aa.user_id as userId,
            aa.status,
            aa.approval_time as approvalTime,
            aa.create_time as createTime,
            COALESCE(su.name, m.name) as userName,
            COALESCE(su.stu_id, m.stu_id) as userStuId
        FROM activity_approver aa
        LEFT JOIN sys_user su ON aa.user_id = su.id
        LEFT JOIN member m ON aa.user_id = m.id
        WHERE aa.activity_id = #{activityId}
        ORDER BY aa.create_time ASC
    </select>

    <!-- 获取活动的负责部门信息 -->
    <select id="selectActivityDepts" resultType="java.util.Map">
        SELECT 
            ad.id,
            ad.activity_id as activityId,
            ad.dept_id as deptId,
            ad.create_time as createTime,
            d.name as deptName
        FROM activity_dept ad
        LEFT JOIN dept d ON ad.dept_id = d.id
        WHERE ad.activity_id = #{activityId}
        ORDER BY ad.create_time ASC
    </select>

    <!-- 获取活动的参与成员详细信息 -->
    <select id="selectActivityMembersWithDetails" resultType="java.util.Map">
        SELECT 
            am.id,
            am.activity_id as activityId,
            am.member_id as memberId,
            am.create_time as createTime,
            m.name,
            m.stu_id as stuId,
            m.gender,
            m.college,
            m.major,
            m.grade,
            m.phone,
            m.email,
            m.role,
            d.name as deptName
        FROM activity_member am
        LEFT JOIN member m ON am.member_id = m.id
        LEFT JOIN dept d ON m.dept_id = d.id
        WHERE am.activity_id = #{activityId}
        ORDER BY am.create_time ASC
    </select>

    <!-- 获取活动的参与成员 -->
    <select id="selectActivityMembers" resultType="java.util.Map">
        SELECT 
            am.id,
            am.activity_id as activityId,
            am.member_id as memberId,
            am.create_time as createTime,
            m.name,
            m.stu_id as stuId,
            m.gender,
            m.college,
            m.major,
            m.grade,
            m.phone,
            m.email,
            m.role,
            am.signup_time as signupTime,
            am.signup_status as signupStatus,
            am.attendance_status as attendanceStatus
        FROM activity_member am
        LEFT JOIN member m ON am.member_id = m.id
        WHERE am.activity_id = #{activityId}
        ORDER BY am.create_time ASC
    </select>

</mapper>
